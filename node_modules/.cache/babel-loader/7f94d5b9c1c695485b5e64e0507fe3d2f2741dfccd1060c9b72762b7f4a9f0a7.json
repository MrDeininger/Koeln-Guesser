{"ast":null,"code":"function haversine(lat1, lon1, lat2, lon2) {\n  // Radius der Erde in km\n  const R = 6371.0;\n\n  // Umrechnung der Breiten- und Längengrade von Grad in Radianten\n  const radLat1 = toRadians(lat1);\n  const radLon1 = toRadians(lon1);\n  const radLat2 = toRadians(lat2);\n  const radLon2 = toRadians(lon2);\n\n  // Differenzen der Koordinaten\n  const dlat = radLat2 - radLat1;\n  const dlon = radLon2 - radLon1;\n\n  // Haversine-Formel\n  const a = Math.sin(dlat / 2) ** 2 + Math.cos(radLat1) * Math.cos(radLat2) * Math.sin(dlon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  // Berechnung des Abstands\n  const distance = R * c;\n  return distance;\n}\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\nexport default haversine;","map":{"version":3,"names":["haversine","lat1","lon1","lat2","lon2","R","radLat1","toRadians","radLon1","radLat2","radLon2","dlat","dlon","a","Math","sin","cos","c","atan2","sqrt","distance","degrees","PI"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kölnguessr/cologneguessr/src/components/haversine.js"],"sourcesContent":["function haversine(lat1, lon1, lat2, lon2) {\r\n    // Radius der Erde in km\r\n    const R = 6371.0;\r\n\r\n    // Umrechnung der Breiten- und Längengrade von Grad in Radianten\r\n    const radLat1 = toRadians(lat1);\r\n    const radLon1 = toRadians(lon1);\r\n    const radLat2 = toRadians(lat2);\r\n    const radLon2 = toRadians(lon2);\r\n\r\n    // Differenzen der Koordinaten\r\n    const dlat = radLat2 - radLat1;\r\n    const dlon = radLon2 - radLon1;\r\n\r\n    // Haversine-Formel\r\n    const a = Math.sin(dlat / 2) ** 2 + Math.cos(radLat1) * Math.cos(radLat2) * Math.sin(dlon / 2) ** 2;\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n    // Berechnung des Abstands\r\n    const distance = R * c;\r\n\r\n    return distance;\r\n}\r\n\r\nfunction toRadians(degrees) {\r\n    return degrees * (Math.PI / 180);\r\n}\r\n\r\nexport default haversine;"],"mappings":"AAAA,SAASA,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACvC;EACA,MAAMC,CAAC,GAAG,MAAM;;EAEhB;EACA,MAAMC,OAAO,GAAGC,SAAS,CAACN,IAAI,CAAC;EAC/B,MAAMO,OAAO,GAAGD,SAAS,CAACL,IAAI,CAAC;EAC/B,MAAMO,OAAO,GAAGF,SAAS,CAACJ,IAAI,CAAC;EAC/B,MAAMO,OAAO,GAAGH,SAAS,CAACH,IAAI,CAAC;;EAE/B;EACA,MAAMO,IAAI,GAAGF,OAAO,GAAGH,OAAO;EAC9B,MAAMM,IAAI,GAAGF,OAAO,GAAGF,OAAO;;EAE9B;EACA,MAAMK,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACJ,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAGG,IAAI,CAACE,GAAG,CAACV,OAAO,CAAC,GAAGQ,IAAI,CAACE,GAAG,CAACP,OAAO,CAAC,GAAGK,IAAI,CAACC,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;EACnG,MAAMK,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACN,CAAC,CAAC,EAAEC,IAAI,CAACK,IAAI,CAAC,CAAC,GAAGN,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMO,QAAQ,GAAGf,CAAC,GAAGY,CAAC;EAEtB,OAAOG,QAAQ;AACnB;AAEA,SAASb,SAASA,CAACc,OAAO,EAAE;EACxB,OAAOA,OAAO,IAAIP,IAAI,CAACQ,EAAE,GAAG,GAAG,CAAC;AACpC;AAEA,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}