{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\WEB2\\\\Abgabe Final Huge\\\\k\\xF6lnguessr\\\\cologneguessr\\\\src\\\\components\\\\clickMarker.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { Map, Marker, useMapEvents } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClickMarker() {\n  _s();\n  const {\n    coordinates,\n    setCoordinates\n  } = React.useContext(MapCoordinatesContext);\n  const map = useMapEvents({\n    click: e => {\n      setCoordinates(e.latlng);\n      console.log('click');\n    }\n  });\n  const icon = L.divIcon({\n    className: 'custom-icon',\n    // Optional, you can use this class to style your icon in CSS\n    html: '<span style=\"line-height: 0.5; font-size: 24px; color: black;\">X</span>' // HTML for the icon\n  });\n  return coordinates === null ? null : /*#__PURE__*/_jsxDEV(Marker, {\n    position: coordinates,\n    icon: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 42\n  }, this);\n}\n_s(ClickMarker, \"CsWCZ3SNQu2Zy48bQjfj1LOVPYg=\", false, function () {\n  return [useMapEvents];\n});\n_c = ClickMarker;\nexport default ClickMarker;\nvar _c;\n$RefreshReg$(_c, \"ClickMarker\");","map":{"version":3,"names":["React","Component","Map","Marker","useMapEvents","jsxDEV","_jsxDEV","ClickMarker","_s","coordinates","setCoordinates","useContext","MapCoordinatesContext","map","click","e","latlng","console","log","icon","L","divIcon","className","html","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kÃ¶lnguessr/cologneguessr/src/components/clickMarker.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, Marker, useMapEvents } from 'react-leaflet';\r\n\r\nfunction ClickMarker() {\r\n    const { coordinates, setCoordinates } = React.useContext(MapCoordinatesContext);\r\n    \r\n    const map = useMapEvents({\r\n        click: (e) => {\r\n            setCoordinates(e.latlng);\r\n            console.log('click');\r\n        },\r\n    });\r\n\r\n    const icon = L.divIcon({\r\n        className: 'custom-icon', // Optional, you can use this class to style your icon in CSS\r\n        html: '<span style=\"line-height: 0.5; font-size: 24px; color: black;\">X</span>', // HTML for the icon\r\n    });\r\n\r\n    return coordinates === null ? null : <Marker position={coordinates} icon={icon} />;\r\n}\r\n\r\nexport default ClickMarker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGV,KAAK,CAACW,UAAU,CAACC,qBAAqB,CAAC;EAE/E,MAAMC,GAAG,GAAGT,YAAY,CAAC;IACrBU,KAAK,EAAGC,CAAC,IAAK;MACVL,cAAc,CAACK,CAAC,CAACC,MAAM,CAAC;MACxBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB;EACJ,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGC,CAAC,CAACC,OAAO,CAAC;IACnBC,SAAS,EAAE,aAAa;IAAE;IAC1BC,IAAI,EAAE,yEAAyE,CAAE;EACrF,CAAC,CAAC;EAEF,OAAOd,WAAW,KAAK,IAAI,GAAG,IAAI,gBAAGH,OAAA,CAACH,MAAM;IAACqB,QAAQ,EAAEf,WAAY;IAACU,IAAI,EAAEA;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtF;AAACpB,EAAA,CAhBQD,WAAW;EAAA,QAGJH,YAAY;AAAA;AAAAyB,EAAA,GAHnBtB,WAAW;AAkBpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}