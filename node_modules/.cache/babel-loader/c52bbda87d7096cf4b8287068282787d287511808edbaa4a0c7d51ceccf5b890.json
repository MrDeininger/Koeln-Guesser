{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\WEB2\\\\Abgabe Final Huge\\\\k\\xF6lnguessr\\\\cologneguessr\\\\src\\\\components\\\\ScoreDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ScoreContext from \"../contexts/scoreContext\";\nimport GameContext from \"../contexts/gameContext\";\nimport \"../css/highscores.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScoreDisplay() {\n  _s();\n  const {\n    setScoreInfo,\n    scoreInfo\n  } = useContext(ScoreContext);\n  const {\n    gameInfo\n  } = useContext(GameContext);\n  const [isScoreVisible, setIsScoreVisible] = React.useState(false);\n\n  // Inside your component\n  const location = useLocation();\n  let scoreWindowId = '';\n  if (location.pathname === '/game') {\n    scoreWindowId = 'scoreWindowGame';\n  } else if (location.pathname === '/info') {\n    scoreWindowId = 'scoreWindowInfo';\n  } else if (location.pathname === '/home') {\n    scoreWindowId = 'scoreWindowHome';\n  }\n  console.log(scoreWindowId);\n  useEffect(() => {\n    const storedScoreInfo = JSON.parse(localStorage.getItem(\"scoreInfo\"));\n    if (!scoreInfo) {\n      if (storedScoreInfo) {\n        setScoreInfo(storedScoreInfo);\n      } else {\n        setScoreInfo([{\n          Index: 0,\n          distance: gameInfo.distance,\n          score: gameInfo.score,\n          name: gameInfo.name\n        }]);\n      }\n    }\n    if (gameInfo && gameInfo.eingeloggt) {\n      setIsScoreVisible(true);\n      if (!scoreInfo) {\n        if (storedScoreInfo) {\n          setScoreInfo(storedScoreInfo);\n        } else {\n          setScoreInfo([{\n            Index: 0,\n            distance: gameInfo.distance,\n            score: gameInfo.score,\n            name: gameInfo.name\n          }]);\n        }\n      } else {\n        const newScoreInfo = {\n          Index: scoreInfo.length,\n          distance: gameInfo.distance,\n          score: gameInfo.score,\n          name: gameInfo.name\n        };\n        setScoreInfo([...scoreInfo, newScoreInfo]);\n        localStorage.setItem(\"scoreInfo\", JSON.stringify([...scoreInfo, newScoreInfo]));\n      }\n    }\n  }, [gameInfo]); // Run effect when gameInfo changes\n\n  const closeScoreInfo = () => {\n    setIsScoreVisible(false);\n  };\n  const toggleScoreInfo = () => {\n    setIsScoreVisible(!isScoreVisible);\n  };\n  return isScoreVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scoreWindow\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: closeScoreInfo,\n      style: {\n        position: \"absolute\",\n        top: \"0px\",\n        right: \"10px\",\n        background: \"none\",\n        border: \"none\",\n        color: \"white\",\n        fontSize: \"24px\"\n      },\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"black\"\n      },\n      children: \"Highscores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scoreContainer\",\n      children: scoreInfo ? [...scoreInfo].sort((a, b) => b.score - a.score).map((score, i, arr) => {\n        const maxIndex = Math.max(...arr.map(score => score.Index));\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"score\",\n          style: {\n            color: score.Index === maxIndex ? \"red\" : \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"scoreEntry\",\n            children: [i + 1, \". \", !score.name ? \"Anonym\" : score.name, \": \", score.score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this);\n      }) : 'noch keine Scores geladen'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleScoreInfo,\n    className: \"scoreWindow\",\n    style: {\n      height: \"10vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(ScoreDisplay, \"NvMY0T6/LvJzY4nyAPf5AZ9EEJE=\", false, function () {\n  return [useLocation];\n});\n_c = ScoreDisplay;\nexport default ScoreDisplay;\nvar _c;\n$RefreshReg$(_c, \"ScoreDisplay\");","map":{"version":3,"names":["React","Component","useEffect","useState","useContext","useLocation","ScoreContext","GameContext","jsxDEV","_jsxDEV","ScoreDisplay","_s","setScoreInfo","scoreInfo","gameInfo","isScoreVisible","setIsScoreVisible","location","scoreWindowId","pathname","console","log","storedScoreInfo","JSON","parse","localStorage","getItem","Index","distance","score","name","eingeloggt","newScoreInfo","length","setItem","stringify","closeScoreInfo","toggleScoreInfo","className","children","onClick","style","position","top","right","background","border","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","id","sort","a","b","map","i","arr","maxIndex","Math","max","height","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kÃ¶lnguessr/cologneguessr/src/components/ScoreDisplay.js"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nimport ScoreContext from \"../contexts/scoreContext\";\r\nimport GameContext from \"../contexts/gameContext\";\r\nimport \"../css/highscores.css\";\r\n\r\nfunction ScoreDisplay() {\r\n\r\n\r\n  const { setScoreInfo, scoreInfo } = useContext(ScoreContext);\r\n  const { gameInfo } = useContext(GameContext);\r\n\r\n  const [isScoreVisible, setIsScoreVisible] = React.useState(false);\r\n\r\n\r\n  // Inside your component\r\n  const location = useLocation();\r\n\r\n  let scoreWindowId = '';\r\n  if(location.pathname === '/game'){\r\n    scoreWindowId = 'scoreWindowGame';\r\n  }else if(location.pathname === '/info'){\r\n    scoreWindowId = 'scoreWindowInfo';\r\n  }else if(location.pathname === '/home'){\r\n    scoreWindowId = 'scoreWindowHome';\r\n  }\r\n  console.log(scoreWindowId);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const storedScoreInfo = JSON.parse(localStorage.getItem(\"scoreInfo\"));\r\n    if (!scoreInfo) {\r\n      if (storedScoreInfo) {\r\n        setScoreInfo(storedScoreInfo);\r\n      } else {\r\n        setScoreInfo([\r\n          {\r\n            Index: 0,\r\n            distance: gameInfo.distance,\r\n            score: gameInfo.score,\r\n            name: gameInfo.name,\r\n          },\r\n        ]);\r\n      }\r\n    }\r\n    if (gameInfo && gameInfo.eingeloggt) {\r\n      setIsScoreVisible(true);\r\n      if (!scoreInfo) {\r\n        if (storedScoreInfo) {\r\n          setScoreInfo(storedScoreInfo);\r\n        } else {\r\n          setScoreInfo([\r\n            {\r\n              Index: 0,\r\n              distance: gameInfo.distance,\r\n              score: gameInfo.score,\r\n              name: gameInfo.name,\r\n            },\r\n          ]);\r\n        }\r\n      } else {\r\n        const newScoreInfo = {\r\n          Index: scoreInfo.length,\r\n          distance: gameInfo.distance,\r\n          score: gameInfo.score,\r\n          name: gameInfo.name,\r\n        };\r\n        setScoreInfo([...scoreInfo, newScoreInfo]);\r\n        localStorage.setItem(\r\n          \"scoreInfo\",\r\n          JSON.stringify([...scoreInfo, newScoreInfo])\r\n        );\r\n      }\r\n    }\r\n  }, [gameInfo]); // Run effect when gameInfo changes\r\n\r\n  const closeScoreInfo = () => {\r\n    setIsScoreVisible(false);\r\n  };\r\n\r\n  const toggleScoreInfo = () => {\r\n    setIsScoreVisible(!isScoreVisible);\r\n  };\r\n\r\n  return isScoreVisible ? (\r\n    <div className=\"scoreWindow\" >\r\n      <button\r\n        onClick={closeScoreInfo}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"0px\",\r\n          right: \"10px\",\r\n          background: \"none\",\r\n          border: \"none\",\r\n          color: \"white\",\r\n          fontSize: \"24px\",\r\n        }}\r\n      >\r\n        X\r\n      </button>\r\n\r\n      <h1 style={{ color: \"black\" }}>Highscores</h1>\r\n      <div id=\"scoreContainer\">\r\n        {scoreInfo?[...scoreInfo]\r\n          .sort((a, b) => b.score - a.score)\r\n          .map((score, i, arr) => {\r\n            const maxIndex = Math.max(...arr.map((score) => score.Index));\r\n            return (\r\n              <p\r\n                key={i}\r\n                id=\"score\"\r\n                style={{ color: score.Index === maxIndex ? \"red\" : \"white\" }}\r\n              >\r\n                <div id=\"scoreEntry\">\r\n                  {i + 1}. {!score.name ? \"Anonym\" : score.name}: {score.score}\r\n                </div>\r\n              </p>\r\n            );\r\n          }):'noch keine Scores geladen'}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <button onClick={toggleScoreInfo} className=\"scoreWindow\" style={{height: \"10vh\"}} >\r\n      <h2>\r\n      Scores\r\n      </h2>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ScoreDisplay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}