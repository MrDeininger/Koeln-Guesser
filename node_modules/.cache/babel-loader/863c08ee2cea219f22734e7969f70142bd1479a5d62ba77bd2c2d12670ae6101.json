{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Marker}from'react-leaflet';import ImageContext from'../../contexts/imageContext';import L from'leaflet';import GameContext from'../../contexts/gameContext';import{jsx as _jsx}from\"react/jsx-runtime\";function ImageMarker(){const{imageInfo,setImage}=React.useContext(ImageContext);const[markerPosition,setMarkerPosition]=useState(null);const{gameInfo}=React.useContext(GameContext);const icon=L.divIcon({className:'custom-icon',// Optional, you can use this class to style your icon in CSS\nhtml:'<span style=\"line-height: 0.5; font-size: 24px; color: black;\">X</span>'// HTML for the icon\n});// useEffect hook to update the Marker position whenever the imageInfo changes\nuseEffect(()=>{// This code will run whenever `imageInfo` changes\nif(gameInfo&&gameInfo.eingeloggt){setMarkerPosition([imageInfo[1],imageInfo[2]]);}if(gameInfo&&!gameInfo.eingeloggt){setMarkerPosition(null);}if(!gameInfo){setMarkerPosition(null);}},[gameInfo]);// The array of dependencies for the useEffect hook. Whenever any of these change, the effect will run again.\nreturn markerPosition===null?null:/*#__PURE__*/_jsx(Marker,{position:markerPosition,icon:icon});}export default ImageMarker;","map":{"version":3,"names":["React","useEffect","useState","Marker","ImageContext","L","GameContext","jsx","_jsx","ImageMarker","imageInfo","setImage","useContext","markerPosition","setMarkerPosition","gameInfo","icon","divIcon","className","html","eingeloggt","position"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/k√∂lnguessr/cologneguessr/src/components/map/imageMarker.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Marker } from 'react-leaflet';\r\nimport ImageContext from '../../contexts/imageContext';\r\nimport L from 'leaflet';\r\nimport GameContext from '../../contexts/gameContext';\r\n\r\nfunction ImageMarker() {\r\n    const { imageInfo, setImage } = React.useContext(ImageContext);\r\n    const [markerPosition, setMarkerPosition] = useState(null);\r\n    const { gameInfo } = React.useContext(GameContext);\r\n    \r\n    const icon = L.divIcon({\r\n        className: 'custom-icon', // Optional, you can use this class to style your icon in CSS\r\n        html: '<span style=\"line-height: 0.5; font-size: 24px; color: black;\">X</span>', // HTML for the icon\r\n    });\r\n\r\n    // useEffect hook to update the Marker position whenever the imageInfo changes\r\n    useEffect(() => {\r\n        // This code will run whenever `imageInfo` changes\r\n        if ( gameInfo && gameInfo.eingeloggt ) {\r\n            setMarkerPosition([imageInfo[1], imageInfo[2]]);\r\n        }\r\n        if ( gameInfo && !gameInfo.eingeloggt ) {\r\n            setMarkerPosition(null);\r\n        }\r\n        if ( !gameInfo ) {\r\n            setMarkerPosition(null);\r\n        }\r\n\r\n    }, [gameInfo]); // The array of dependencies for the useEffect hook. Whenever any of these change, the effect will run again.\r\n\r\n    return markerPosition  === null ? null : <Marker position={markerPosition} icon={icon} />;\r\n}\r\n\r\nexport default ImageMarker;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,MAAM,KAAQ,eAAe,CACtC,MAAO,CAAAC,YAAY,KAAM,6BAA6B,CACtD,MAAO,CAAAC,CAAC,KAAM,SAAS,CACvB,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACnB,KAAM,CAAEC,SAAS,CAAEC,QAAS,CAAC,CAAGX,KAAK,CAACY,UAAU,CAACR,YAAY,CAAC,CAC9D,KAAM,CAACS,cAAc,CAAEC,iBAAiB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAAEa,QAAS,CAAC,CAAGf,KAAK,CAACY,UAAU,CAACN,WAAW,CAAC,CAElD,KAAM,CAAAU,IAAI,CAAGX,CAAC,CAACY,OAAO,CAAC,CACnBC,SAAS,CAAE,aAAa,CAAE;AAC1BC,IAAI,CAAE,yEAA2E;AACrF,CAAC,CAAC,CAEF;AACAlB,SAAS,CAAC,IAAM,CACZ;AACA,GAAKc,QAAQ,EAAIA,QAAQ,CAACK,UAAU,CAAG,CACnCN,iBAAiB,CAAC,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CACnD,CACA,GAAKK,QAAQ,EAAI,CAACA,QAAQ,CAACK,UAAU,CAAG,CACpCN,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CACA,GAAK,CAACC,QAAQ,CAAG,CACbD,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CAEJ,CAAC,CAAE,CAACC,QAAQ,CAAC,CAAC,CAAE;AAEhB,MAAO,CAAAF,cAAc,GAAM,IAAI,CAAG,IAAI,cAAGL,IAAA,CAACL,MAAM,EAACkB,QAAQ,CAAER,cAAe,CAACG,IAAI,CAAEA,IAAK,CAAE,CAAC,CAC7F,CAEA,cAAe,CAAAP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}