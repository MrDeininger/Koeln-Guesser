{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\WEB2\\\\Abgabe Final Huge\\\\k\\xF6lnguessr\\\\cologneguessr\\\\src\\\\game.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport './css/game.css';\nimport ImageDisplay from './components/imageViewer';\nimport ImageContext from './contexts/imageContext';\nimport MapComponent from './components/map/mapComponent';\nimport MapCoordinatesContext from './contexts/mapContext';\nimport haversine from './components/haversine';\nimport OpenStreetCam from './components/openstreetcam';\nimport SubmitGuessButton from './components/submitGuessButton';\nimport GameContext from './contexts/gameContext';\nimport ScoreContext from './contexts/scoreContext';\nimport ScoreDisplay from './components/ScoreDisplay';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'bootstrap';\nimport ResetGameButton from './components/resetGameButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  console.log('Game');\n  const {\n    coordinates,\n    setCoordinates\n  } = React.useContext(MapCoordinatesContext);\n  const {\n    imageInfo,\n    setImageInfo\n  } = useContext(ImageContext);\n  const {\n    gameInfo,\n    setGameInfo\n  } = useContext(GameContext);\n  const {\n    setScoreInfo\n  } = useContext(ScoreContext);\n  function resetGame() {\n    setGameInfo(null);\n    setImageInfo(null);\n    setCoordinates(null);\n    OpenStreetCam.fetchImage();\n  }\n  useEffect(() => {\n    if (coordinates && imageInfo) {\n      const newGameInfo = {\n        ...gameInfo\n      };\n      const dist = haversine(coordinates.lat, coordinates.lng, imageInfo[1], imageInfo[2]);\n      newGameInfo.distance = dist;\n      newGameInfo.lat = coordinates.lat;\n      newGameInfo.lng = coordinates.lng;\n      newGameInfo.latImg = imageInfo[1];\n      newGameInfo.lngImg = imageInfo[2];\n      newGameInfo.score = Math.round(1000 - dist * 100);\n      setGameInfo(newGameInfo);\n    }\n  }, [coordinates, imageInfo]); // Run effect when coordinates change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"K\\xF6lnGuesser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScoreDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), coordinates ? /*#__PURE__*/_jsxDEV(SubmitGuessButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 28\n    }, this) : '', /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      className: \"Home\",\n      children: \"home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResetGameButton, {\n      resetGame: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OpenStreetCam, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"jwIII7e4JCsAhSFAb2900vvqyC0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","ImageDisplay","ImageContext","MapComponent","MapCoordinatesContext","haversine","OpenStreetCam","SubmitGuessButton","GameContext","ScoreContext","ScoreDisplay","Link","Button","ResetGameButton","jsxDEV","_jsxDEV","Game","_s","console","log","coordinates","setCoordinates","imageInfo","setImageInfo","gameInfo","setGameInfo","setScoreInfo","resetGame","fetchImage","newGameInfo","dist","lat","lng","distance","latImg","lngImg","score","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kölnguessr/cologneguessr/src/game.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport './css/game.css';\r\nimport ImageDisplay from './components/imageViewer';\r\nimport ImageContext from './contexts/imageContext';\r\nimport MapComponent from './components/map/mapComponent';\r\nimport MapCoordinatesContext from './contexts/mapContext';\r\nimport haversine from './components/haversine';\r\nimport OpenStreetCam from './components/openstreetcam';\r\nimport SubmitGuessButton from './components/submitGuessButton';\r\nimport GameContext from './contexts/gameContext';\r\nimport ScoreContext from './contexts/scoreContext';\r\nimport ScoreDisplay from './components/ScoreDisplay';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'bootstrap';\r\nimport ResetGameButton from './components/resetGameButton';\r\n\r\n\r\nfunction Game() {\r\n    console.log('Game');\r\n    const { coordinates, setCoordinates } = React.useContext(MapCoordinatesContext);\r\n    const { imageInfo, setImageInfo } = useContext(ImageContext);\r\n    const { gameInfo, setGameInfo } = useContext(GameContext);\r\n    const { setScoreInfo } = useContext(ScoreContext);\r\n\r\n\r\n    function resetGame() {\r\n        setGameInfo(null);\r\n        setImageInfo(null);\r\n        setCoordinates(null);\r\n        OpenStreetCam.fetchImage();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(coordinates && imageInfo) {\r\n            const newGameInfo = {...gameInfo};\r\n            const dist = haversine(coordinates.lat, coordinates.lng, imageInfo[1], imageInfo[2]);\r\n            newGameInfo.distance = dist;\r\n            newGameInfo.lat = coordinates.lat;\r\n            newGameInfo.lng = coordinates.lng;\r\n            newGameInfo.latImg = imageInfo[1];\r\n            newGameInfo.lngImg = imageInfo[2];\r\n            newGameInfo.score = Math.round(1000 - dist * 100);\r\n            setGameInfo(newGameInfo);\r\n        }\r\n    }, [coordinates, imageInfo]); // Run effect when coordinates change\r\n    \r\n\r\n    return (\r\n        <div className='gameContainer'>\r\n            <h1>KölnGuesser</h1>\r\n            <MapComponent />\r\n            <ScoreDisplay />\r\n            <ImageDisplay />\r\n            {coordinates ? <SubmitGuessButton /> : ''}\r\n            <Link to='/home' className='Home'>home</Link>\r\n            <ResetGameButton resetGame={resetGame} />\r\n            <OpenStreetCam />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}