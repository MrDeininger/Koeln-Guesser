{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\WEB2\\\\Abgabe Final Huge\\\\k\\xF6lnguessr\\\\cologneguessr\\\\src\\\\MapillaryViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport mapillary from 'mapillary-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapillaryViewer = () => {\n  _s();\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    const clientId = 'YOUR_MAPILLARY_CLIENT_ID';\n    const viewer = new mapillary.Viewer({\n      container: viewerRef.current,\n      clientId: clientId\n    });\n\n    // Fetch random images from Cologne\n    viewer.moveToKey('random', {\n      country: 'Germany',\n      city: 'Cologne'\n    });\n    return () => {\n      viewer.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: viewerRef,\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n_s(MapillaryViewer, \"WZlWBGTTx29lA8KL541/EmcE3B8=\");\n_c = MapillaryViewer;\nexport default MapillaryViewer;\nvar _c;\n$RefreshReg$(_c, \"MapillaryViewer\");","map":{"version":3,"names":["React","useEffect","useRef","mapillary","jsxDEV","_jsxDEV","MapillaryViewer","_s","viewerRef","clientId","viewer","Viewer","container","current","moveToKey","country","city","remove","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kÃ¶lnguessr/cologneguessr/src/MapillaryViewer.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport mapillary from 'mapillary-js';\r\n\r\nconst MapillaryViewer = () => {\r\n  const viewerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const clientId = 'YOUR_MAPILLARY_CLIENT_ID';\r\n    const viewer = new mapillary.Viewer({\r\n      container: viewerRef.current,\r\n      clientId: clientId,\r\n    });\r\n\r\n    // Fetch random images from Cologne\r\n    viewer.moveToKey('random', { country: 'Germany', city: 'Cologne' });\r\n\r\n    return () => {\r\n      viewer.remove();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={viewerRef} style={{ width: '100%', height: '500px' }} />;\r\n};\r\n\r\nexport default MapillaryViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAG,0BAA0B;IAC3C,MAAMC,MAAM,GAAG,IAAIP,SAAS,CAACQ,MAAM,CAAC;MAClCC,SAAS,EAAEJ,SAAS,CAACK,OAAO;MAC5BJ,QAAQ,EAAEA;IACZ,CAAC,CAAC;;IAEF;IACAC,MAAM,CAACI,SAAS,CAAC,QAAQ,EAAE;MAAEC,OAAO,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC;IAEnE,OAAO,MAAM;MACXN,MAAM,CAACO,MAAM,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOZ,OAAA;IAAKa,GAAG,EAAEV,SAAU;IAACW,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAAClB,EAAA,CAnBID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAqBrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}