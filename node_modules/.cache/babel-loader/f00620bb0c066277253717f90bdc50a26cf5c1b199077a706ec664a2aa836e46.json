{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\WEB2\\\\Abgabe Final Huge\\\\k\\xF6lnguessr\\\\cologneguessr\\\\src\\\\components\\\\map\\\\lineBetweenMarkers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Polyline } from 'react-leaflet';\nimport { useContext } from 'react';\nimport MapCoordinatesContext from '../../contexts/mapContext';\nimport ImageContext from '../../contexts/imageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineBetweenMarkers() {\n  _s();\n  ;\n  const {\n    coordinates\n  } = useContext(MapCoordinatesContext);\n  const {\n    imageInfo\n  } = useContext(ImageContext);\n  const {\n    gameInfo\n  } = useContext(GameContext);\n  const [markerPosition, setMarkerPosition] = useState(null);\n  if (imageInfo === null || coordinates === null) return null;\n  const marker1Position = coordinates;\n  const marker2Position = [imageInfo[1], imageInfo[2]];\n\n  // useEffect hook to update the Marker position whenever the imageInfo changes\n  useEffect(() => {\n    // This code will run whenever `imageInfo` changes\n    if (gameInfo && gameInfo.eingeloggt) {\n      setMarkerPosition([imageInfo[1], imageInfo[2]]);\n    }\n  }, [gameInfo]); // The array of dependencies for the useEffect hook. Whenever any of these change, the effect will run again.\n\n  const line = [marker1Position, marker2Position];\n  return /*#__PURE__*/_jsxDEV(Polyline, {\n    positions: line,\n    color: \"red\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(LineBetweenMarkers, \"NBaMc+swDMfcArQWioROLtQgjwc=\");\n_c = LineBetweenMarkers;\nexport default LineBetweenMarkers;\nvar _c;\n$RefreshReg$(_c, \"LineBetweenMarkers\");","map":{"version":3,"names":["React","useEffect","useState","Polyline","useContext","MapCoordinatesContext","ImageContext","jsxDEV","_jsxDEV","LineBetweenMarkers","_s","coordinates","imageInfo","gameInfo","GameContext","markerPosition","setMarkerPosition","marker1Position","marker2Position","eingeloggt","line","positions","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kÃ¶lnguessr/cologneguessr/src/components/map/lineBetweenMarkers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Polyline } from 'react-leaflet';\r\nimport { useContext } from 'react';\r\nimport MapCoordinatesContext from '../../contexts/mapContext';\r\nimport ImageContext from '../../contexts/imageContext';\r\n\r\n\r\n\r\n\r\nfunction LineBetweenMarkers( ) {\r\n;\r\n    const { coordinates } = useContext(MapCoordinatesContext);\r\n    const { imageInfo } = useContext(ImageContext);\r\n    const { gameInfo } = useContext(GameContext);\r\n    const [markerPosition, setMarkerPosition] = useState(null);\r\n\r\n    if(imageInfo === null || coordinates === null) return null;\r\n\r\n\r\n    const marker1Position = coordinates;\r\n    const marker2Position = [imageInfo[1], imageInfo[2]];\r\n\r\n        // useEffect hook to update the Marker position whenever the imageInfo changes\r\n        useEffect(() => {\r\n            // This code will run whenever `imageInfo` changes\r\n            if ( gameInfo && gameInfo.eingeloggt ) {\r\n                setMarkerPosition([imageInfo[1], imageInfo[2]]);\r\n            }\r\n        }, [gameInfo]); // The array of dependencies for the useEffect hook. Whenever any of these change, the effect will run again.\r\n    \r\n\r\n    const line = [marker1Position, marker2Position];\r\n\r\n    return (\r\n        <Polyline positions={line} color='red' />\r\n    );\r\n}\r\n\r\nexport default LineBetweenMarkers;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,qBAAqB,MAAM,2BAA2B;AAC7D,OAAOC,YAAY,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKvD,SAASC,kBAAkBA,CAAA,EAAI;EAAAC,EAAA;EAC/B;EACI,MAAM;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAACC,qBAAqB,CAAC;EACzD,MAAM;IAAEO;EAAU,CAAC,GAAGR,UAAU,CAACE,YAAY,CAAC;EAC9C,MAAM;IAAEO;EAAS,CAAC,GAAGT,UAAU,CAACU,WAAW,CAAC;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1D,IAAGU,SAAS,KAAK,IAAI,IAAID,WAAW,KAAK,IAAI,EAAE,OAAO,IAAI;EAG1D,MAAMM,eAAe,GAAGN,WAAW;EACnC,MAAMO,eAAe,GAAG,CAACN,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACAX,SAAS,CAAC,MAAM;IACZ;IACA,IAAKY,QAAQ,IAAIA,QAAQ,CAACM,UAAU,EAAG;MACnCH,iBAAiB,CAAC,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD;EACJ,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAGpB,MAAMO,IAAI,GAAG,CAACH,eAAe,EAAEC,eAAe,CAAC;EAE/C,oBACIV,OAAA,CAACL,QAAQ;IAACkB,SAAS,EAAED,IAAK;IAACE,KAAK,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEjD;AAAChB,EAAA,CA3BQD,kBAAkB;AAAAkB,EAAA,GAAlBlB,kBAAkB;AA6B3B,eAAeA,kBAAkB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}