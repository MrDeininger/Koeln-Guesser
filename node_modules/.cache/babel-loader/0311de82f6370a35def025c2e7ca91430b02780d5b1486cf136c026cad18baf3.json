{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport ImageContext from \"../contexts/imageContext\";\nfunction OpenStreetCam() {\n  _s();\n  const {\n    imageInfo,\n    setImageInfo\n  } = useContext(ImageContext);\n  function loadImage(url) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.onload = () => resolve(img);\n      img.onerror = () => reject(new Error('Image load failed'));\n      img.src = url;\n    });\n  }\n\n  // Inside your .then block where you set setImageInfo\n  const randomPhoto = data.result.data[randomIndex];\n  loadImage(randomPhoto.fileurlProc).then(img => {\n    setImageInfo([img.src, randomPhoto.lat, randomPhoto.lng]);\n  }).catch(error => {\n    console.error('Error loading image:', error);\n    fetchImage(retryCount + 1); // Retry if image load failed\n  });\n  const fetchImage = (retryCount = 0) => {\n    if (retryCount > 5) {\n      // Maximum 5 retries\n      console.error('Failed to fetch image after 5 attempts');\n      return;\n    }\n\n    // Define the latitude and longitude boundaries of the rectangle\n    const latMin = 50.9100;\n    const latMax = 50.9600;\n    const lngMin = 6.89516;\n    const lngMax = 7.06372;\n\n    // Generate a random latitude and longitude within the rectangle\n    const lat = Math.random() * (latMax - latMin) + latMin;\n    const lng = Math.random() * (lngMax - lngMin) + lngMin;\n    console.log(\"Fetching OpenStreetCam image...\");\n    fetch(`https://api.openstreetcam.org/2.0/photo/?lat=${lat}&lng=${lng}&radius=500`).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data) {\n        let numberOfImages = data.result.data.length;\n        console.log(`Found ${numberOfImages} images.`);\n        if (numberOfImages > 0) {\n          const randomIndex = Math.floor(Math.random() * (numberOfImages - 1));\n          const randomPhoto = data.result.data[randomIndex];\n          setImageInfo([randomPhoto.fileurlProc, randomPhoto.lat, randomPhoto.lng]);\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    if (imageInfo) return; // If imageInfo is already set, don't run this code\n    fetchImage();\n  }, [imageInfo]); // Only run this code when imageInfo changes\n\n  return null; // or return your JSX here\n}\n_s(OpenStreetCam, \"+Mev5vz49xQwATHy3XgmyONiRbI=\");\n_c = OpenStreetCam;\nexport default OpenStreetCam;\nvar _c;\n$RefreshReg$(_c, \"OpenStreetCam\");","map":{"version":3,"names":["useContext","useEffect","ImageContext","OpenStreetCam","_s","imageInfo","setImageInfo","loadImage","url","Promise","resolve","reject","img","Image","onload","onerror","Error","src","randomPhoto","data","result","randomIndex","fileurlProc","then","lat","lng","catch","error","console","fetchImage","retryCount","latMin","latMax","lngMin","lngMax","Math","random","log","fetch","response","json","numberOfImages","length","floor","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kÃ¶lnguessr/cologneguessr/src/components/openstreetcam.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport ImageContext from \"../contexts/imageContext\";\r\n\r\nfunction OpenStreetCam() {\r\n    const { imageInfo,  setImageInfo } = useContext(ImageContext);\r\n\r\n    function loadImage(url) {\r\n        return new Promise((resolve, reject) => {\r\n            const img = new Image();\r\n            img.onload = () => resolve(img);\r\n            img.onerror = () => reject(new Error('Image load failed'));\r\n            img.src = url;\r\n        });\r\n    }\r\n\r\n    // Inside your .then block where you set setImageInfo\r\n    const randomPhoto = data.result.data[randomIndex];\r\n    loadImage(randomPhoto.fileurlProc)\r\n        .then((img) => {\r\n            setImageInfo([img.src, randomPhoto.lat, randomPhoto.lng]);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error loading image:', error);\r\n            fetchImage(retryCount + 1); // Retry if image load failed\r\n        });\r\n\r\n    const fetchImage = (retryCount = 0) => {\r\n        if (retryCount > 5) { // Maximum 5 retries\r\n            console.error('Failed to fetch image after 5 attempts');\r\n            return;\r\n        }\r\n\r\n        // Define the latitude and longitude boundaries of the rectangle\r\n        const latMin = 50.9100;\r\n        const latMax = 50.9600;\r\n        const lngMin = 6.89516;\r\n        const lngMax = 7.06372;\r\n\r\n        // Generate a random latitude and longitude within the rectangle\r\n        const lat = Math.random() * (latMax - latMin) + latMin;\r\n        const lng = Math.random() * (lngMax - lngMin) + lngMin;\r\n        console.log(\"Fetching OpenStreetCam image...\"); \r\n        fetch(\r\n            `https://api.openstreetcam.org/2.0/photo/?lat=${lat}&lng=${lng}&radius=500`\r\n        )\r\n            .then((response) => {\r\n                \r\n                return response.json();\r\n                \r\n            })\r\n            .then((data) => {\r\n                if (data) {\r\n                    let numberOfImages = data.result.data.length;\r\n                    console.log(`Found ${numberOfImages} images.`);\r\n                    if (numberOfImages > 0) {\r\n                        const randomIndex = Math.floor(Math.random() * (numberOfImages -1));\r\n                        const randomPhoto = data.result.data[randomIndex];\r\n                        setImageInfo([randomPhoto.fileurlProc, randomPhoto.lat, randomPhoto.lng]);\r\n                    } \r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (imageInfo) return; // If imageInfo is already set, don't run this code\r\n        fetchImage();\r\n    }, [imageInfo]); // Only run this code when imageInfo changes\r\n\r\n    return null; // or return your JSX here\r\n}\r\n\r\nexport default OpenStreetCam;"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,SAAS;IAAGC;EAAa,CAAC,GAAGN,UAAU,CAACE,YAAY,CAAC;EAE7D,SAASK,SAASA,CAACC,GAAG,EAAE;IACpB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAMJ,OAAO,CAACE,GAAG,CAAC;MAC/BA,GAAG,CAACG,OAAO,GAAG,MAAMJ,MAAM,CAAC,IAAIK,KAAK,CAAC,mBAAmB,CAAC,CAAC;MAC1DJ,GAAG,CAACK,GAAG,GAAGT,GAAG;IACjB,CAAC,CAAC;EACN;;EAEA;EACA,MAAMU,WAAW,GAAGC,IAAI,CAACC,MAAM,CAACD,IAAI,CAACE,WAAW,CAAC;EACjDd,SAAS,CAACW,WAAW,CAACI,WAAW,CAAC,CAC7BC,IAAI,CAAEX,GAAG,IAAK;IACXN,YAAY,CAAC,CAACM,GAAG,CAACK,GAAG,EAAEC,WAAW,CAACM,GAAG,EAAEN,WAAW,CAACO,GAAG,CAAC,CAAC;EAC7D,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CE,UAAU,CAACC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;EAEN,MAAMD,UAAU,GAAGA,CAACC,UAAU,GAAG,CAAC,KAAK;IACnC,IAAIA,UAAU,GAAG,CAAC,EAAE;MAAE;MAClBF,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;MACvD;IACJ;;IAEA;IACA,MAAMI,MAAM,GAAG,OAAO;IACtB,MAAMC,MAAM,GAAG,OAAO;IACtB,MAAMC,MAAM,GAAG,OAAO;IACtB,MAAMC,MAAM,GAAG,OAAO;;IAEtB;IACA,MAAMV,GAAG,GAAGW,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIJ,MAAM,GAAGD,MAAM,CAAC,GAAGA,MAAM;IACtD,MAAMN,GAAG,GAAGU,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,MAAM,GAAGD,MAAM,CAAC,GAAGA,MAAM;IACtDL,OAAO,CAACS,GAAG,CAAC,iCAAiC,CAAC;IAC9CC,KAAK,CACA,gDAA+Cd,GAAI,QAAOC,GAAI,aACnE,CAAC,CACIF,IAAI,CAAEgB,QAAQ,IAAK;MAEhB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAE1B,CAAC,CAAC,CACDjB,IAAI,CAAEJ,IAAI,IAAK;MACZ,IAAIA,IAAI,EAAE;QACN,IAAIsB,cAAc,GAAGtB,IAAI,CAACC,MAAM,CAACD,IAAI,CAACuB,MAAM;QAC5Cd,OAAO,CAACS,GAAG,CAAE,SAAQI,cAAe,UAAS,CAAC;QAC9C,IAAIA,cAAc,GAAG,CAAC,EAAE;UACpB,MAAMpB,WAAW,GAAGc,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIK,cAAc,GAAE,CAAC,CAAC,CAAC;UACnE,MAAMvB,WAAW,GAAGC,IAAI,CAACC,MAAM,CAACD,IAAI,CAACE,WAAW,CAAC;UACjDf,YAAY,CAAC,CAACY,WAAW,CAACI,WAAW,EAAEJ,WAAW,CAACM,GAAG,EAAEN,WAAW,CAACO,GAAG,CAAC,CAAC;QAC7E;MACJ;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACS,GAAG,CAACV,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,IAAII,SAAS,EAAE,OAAO,CAAC;IACvBwB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACxB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,OAAO,IAAI,CAAC,CAAC;AACjB;AAACD,EAAA,CArEQD,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AAuEtB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}