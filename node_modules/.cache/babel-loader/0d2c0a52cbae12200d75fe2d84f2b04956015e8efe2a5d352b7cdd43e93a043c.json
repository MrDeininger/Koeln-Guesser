{"ast":null,"code":"var _jsxFileName = \"C:\\\\_Code\\\\WEB2\\\\Abgabe Final Huge\\\\k\\xF6lnguessr\\\\cologneguessr\\\\src\\\\game.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./css/game.css\";\nimport ImageDisplay from \"./components/imageViewer\";\nimport ImageContext from \"./contexts/imageContext\";\nimport MapComponent from \"./components/map/mapComponent\";\nimport MapCoordinatesContext from \"./contexts/mapContext\";\nimport haversine from \"./components/haversine\";\nimport OpenStreetCam from \"./components/openstreetcam\";\nimport SubmitGuessButton from \"./components/submitGuessButton\";\nimport GameContext from \"./contexts/gameContext\";\nimport ScoreDisplay from \"./components/ScoreDisplay\";\nimport { Link } from \"react-router-dom\";\nimport ResetGameButton from \"./components/resetGameButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const {\n    coordinates,\n    setCoordinates\n  } = React.useContext(MapCoordinatesContext);\n  const {\n    imageInfo,\n    setImageInfo\n  } = useContext(ImageContext);\n  const {\n    gameInfo,\n    setGameInfo\n  } = useContext(GameContext);\n  const [reset, setReset] = useState(false);\n  function resetGame() {\n    setCoordinates(null);\n    // lösche alle Daten aus gameInfo, außer name\n    const currentGameInfo = {\n      ...gameInfo\n    };\n    setGameInfo({\n      name: currentGameInfo.name\n    });\n    setImageInfo(null);\n    // lade neues Bild\n    setReset(!reset);\n  }\n  useEffect(() => {\n    if (coordinates && imageInfo) {\n      const newGameInfo = {\n        ...gameInfo\n      };\n      const dist = haversine(coordinates.lat, coordinates.lng, imageInfo[1], imageInfo[2]);\n      newGameInfo.distance = dist;\n      newGameInfo.lat = coordinates.lat;\n      newGameInfo.lng = coordinates.lng;\n      newGameInfo.latImg = imageInfo[1];\n      newGameInfo.lngImg = imageInfo[2];\n      newGameInfo.score = Math.round(1000 - dist * 100);\n      setGameInfo(newGameInfo);\n    }\n  }, [coordinates, imageInfo]); // Effekt wird nur ausgeführt, wenn sich coordinates oder imageInfo ändern\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameContainer\",\n    children: [/*#__PURE__*/_jsxDEV(MapComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScoreDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      reset: resetGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttonContainer\",\n      children: [coordinates ? /*#__PURE__*/_jsxDEV(SubmitGuessButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(ResetGameButton, {\n        resetGame: resetGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        className: \"btn btn-primary\",\n        id: \"backtohomebutton\",\n        onClick: resetGame,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OpenStreetCam, {\n      reset: reset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Yd16dQDKQprnQrWzHT7AbPZ81ms=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useContext","useEffect","useState","ImageDisplay","ImageContext","MapComponent","MapCoordinatesContext","haversine","OpenStreetCam","SubmitGuessButton","GameContext","ScoreDisplay","Link","ResetGameButton","jsxDEV","_jsxDEV","Game","_s","coordinates","setCoordinates","imageInfo","setImageInfo","gameInfo","setGameInfo","reset","setReset","resetGame","currentGameInfo","name","newGameInfo","dist","lat","lng","distance","latImg","lngImg","score","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","to","onClick","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kölnguessr/cologneguessr/src/game.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./css/game.css\";\r\nimport ImageDisplay from \"./components/imageViewer\";\r\nimport ImageContext from \"./contexts/imageContext\";\r\nimport MapComponent from \"./components/map/mapComponent\";\r\nimport MapCoordinatesContext from \"./contexts/mapContext\";\r\nimport haversine from \"./components/haversine\";\r\nimport OpenStreetCam from \"./components/openstreetcam\";\r\nimport SubmitGuessButton from \"./components/submitGuessButton\";\r\nimport GameContext from \"./contexts/gameContext\";\r\nimport ScoreDisplay from \"./components/ScoreDisplay\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ResetGameButton from \"./components/resetGameButton\";\r\n\r\nfunction Game() {\r\n  const { coordinates, setCoordinates } = React.useContext(\r\n    MapCoordinatesContext\r\n  );\r\n  const { imageInfo, setImageInfo } = useContext(ImageContext);\r\n  const { gameInfo, setGameInfo } = useContext(GameContext);\r\n  const [reset, setReset] = useState(false);\r\n\r\n  function resetGame() {\r\n    setCoordinates(null);\r\n    // lösche alle Daten aus gameInfo, außer name\r\n    const currentGameInfo = { ...gameInfo };\r\n    setGameInfo({ name: currentGameInfo.name });\r\n    setImageInfo(null);\r\n    // lade neues Bild\r\n    setReset(!reset);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (coordinates && imageInfo) {\r\n      const newGameInfo = { ...gameInfo };\r\n      const dist = haversine(\r\n        coordinates.lat,\r\n        coordinates.lng,\r\n        imageInfo[1],\r\n        imageInfo[2]\r\n      );\r\n      newGameInfo.distance = dist;\r\n      newGameInfo.lat = coordinates.lat;\r\n      newGameInfo.lng = coordinates.lng;\r\n      newGameInfo.latImg = imageInfo[1];\r\n      newGameInfo.lngImg = imageInfo[2];\r\n      newGameInfo.score = Math.round(1000 - dist * 100);\r\n      setGameInfo(newGameInfo);\r\n    }\r\n  }, [coordinates, imageInfo]); // Effekt wird nur ausgeführt, wenn sich coordinates oder imageInfo ändern\r\n\r\n  return (\r\n    <div className=\"gameContainer\">\r\n      <MapComponent />\r\n      <ScoreDisplay />\r\n      <ImageDisplay reset={resetGame} />\r\n\r\n      <div id=\"buttonContainer\">\r\n        {coordinates ? <SubmitGuessButton /> : \"\"}\r\n        <ResetGameButton resetGame={resetGame} />\r\n        <Link\r\n          to=\"/home\"\r\n          className=\"btn btn-primary\"\r\n          id=\"backtohomebutton\"\r\n          onClick={resetGame}\r\n        >\r\n          Home\r\n        </Link>\r\n      </div>\r\n      <OpenStreetCam reset={reset} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}