{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport ImageContext from \"../contexts/imageContext\";\nfunction OpenStreetCam() {\n  _s();\n  const {\n    imageInfo,\n    setImageInfo\n  } = useContext(ImageContext);\n  useEffect(() => {\n    if (imageInfo) return; // If imageInfo is already set, don't run this code\n    // Define the latitude and longitude boundaries of the rectangle\n    const latMin = 50.9100;\n    const latMax = 50.9600;\n    const lngMin = 6.89516;\n    const lngMax = 7.06372;\n\n    // Generate a random latitude and longitude within the rectangle\n    const lat = Math.random() * (latMax - latMin) + latMin;\n    const lng = Math.random() * (lngMax - lngMin) + lngMin;\n    console.log(\"Fetching OpenStreetCam image...\");\n    fetch(`https://api.openstreetcam.org/2.0/photo/?lat=${lat}&lng=${lng}&radius=500`).then(response => {\n      return response.json();\n    }).then(data => {\n      let numberOfImages = data.result.data.length;\n      console.log(`Found ${numberOfImages} images.`);\n      if (numberOfImages > 0) {\n        const randomIndex = Math.floor(Math.random() * (numberOfImages - 1));\n        const randomPhoto = data.result.data[randomIndex];\n        setImageInfo([randomPhoto.fileurlProc, randomPhoto.lat, randomPhoto.lng]);\n      } else {\n        setImageInfo(null);\n      }\n    }).catch(error => {\n      setImageInfo(null);\n      if (error.message.includes('OpaqueResponseBlocking')) {\n        console.error(\"Error in OpenStreetCam: A resource is blocked by OpaqueResponseBlocking. Please check the browser console for details.\");\n      } else {\n        console.error(\"Error in OpenStreetCam:\", error);\n      }\n    });\n  }, [imageInfo]); // Only run this code when imageInfo changes\n\n  return null; // or return your JSX here\n}\n_s(OpenStreetCam, \"+Mev5vz49xQwATHy3XgmyONiRbI=\");\n_c = OpenStreetCam;\nexport default OpenStreetCam;\nvar _c;\n$RefreshReg$(_c, \"OpenStreetCam\");","map":{"version":3,"names":["useContext","useEffect","ImageContext","OpenStreetCam","_s","imageInfo","setImageInfo","latMin","latMax","lngMin","lngMax","lat","Math","random","lng","console","log","fetch","then","response","json","data","numberOfImages","result","length","randomIndex","floor","randomPhoto","fileurlProc","catch","error","message","includes","_c","$RefreshReg$"],"sources":["C:/_Code/WEB2/Abgabe Final Huge/kÃ¶lnguessr/cologneguessr/src/components/openstreetcam.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport ImageContext from \"../contexts/imageContext\";\r\n\r\nfunction OpenStreetCam() {\r\n    const { imageInfo,  setImageInfo } = useContext(ImageContext);\r\n\r\n    useEffect(() => {\r\n        if (imageInfo) return; // If imageInfo is already set, don't run this code\r\n        // Define the latitude and longitude boundaries of the rectangle\r\n        const latMin = 50.9100;\r\n        const latMax = 50.9600;\r\n        const lngMin = 6.89516;\r\n        const lngMax = 7.06372;\r\n\r\n        // Generate a random latitude and longitude within the rectangle\r\n        const lat = Math.random() * (latMax - latMin) + latMin;\r\n        const lng = Math.random() * (lngMax - lngMin) + lngMin;\r\n        console.log(\"Fetching OpenStreetCam image...\");\r\n        fetch(\r\n            `https://api.openstreetcam.org/2.0/photo/?lat=${lat}&lng=${lng}&radius=500`\r\n        )\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                let numberOfImages = data.result.data.length;\r\n                console.log(`Found ${numberOfImages} images.`);\r\n                if (numberOfImages > 0) {\r\n                    const randomIndex = Math.floor(Math.random() * (numberOfImages -1));\r\n                    const randomPhoto = data.result.data[randomIndex];\r\n                    setImageInfo([randomPhoto.fileurlProc, randomPhoto.lat, randomPhoto.lng]);\r\n                } else {\r\n                    setImageInfo(null);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setImageInfo(null);\r\n                if (error.message.includes('OpaqueResponseBlocking')) {\r\n                    console.error(\"Error in OpenStreetCam: A resource is blocked by OpaqueResponseBlocking. Please check the browser console for details.\");\r\n                } else {\r\n                    console.error(\"Error in OpenStreetCam:\", error);\r\n                }\r\n            });\r\n    }, [imageInfo]); // Only run this code when imageInfo changes\r\n\r\n    return null; // or return your JSX here\r\n}\r\n\r\nexport default OpenStreetCam;"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,SAAS;IAAGC;EAAa,CAAC,GAAGN,UAAU,CAACE,YAAY,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACZ,IAAII,SAAS,EAAE,OAAO,CAAC;IACvB;IACA,MAAME,MAAM,GAAG,OAAO;IACtB,MAAMC,MAAM,GAAG,OAAO;IACtB,MAAMC,MAAM,GAAG,OAAO;IACtB,MAAMC,MAAM,GAAG,OAAO;;IAEtB;IACA,MAAMC,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIL,MAAM,GAAGD,MAAM,CAAC,GAAGA,MAAM;IACtD,MAAMO,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIH,MAAM,GAAGD,MAAM,CAAC,GAAGA,MAAM;IACtDM,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9CC,KAAK,CACA,gDAA+CN,GAAI,QAAOG,GAAI,aACnE,CAAC,CACII,IAAI,CAAEC,QAAQ,IAAK;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAACF,IAAI,CAACG,MAAM;MAC5CT,OAAO,CAACC,GAAG,CAAE,SAAQM,cAAe,UAAS,CAAC;MAC9C,IAAIA,cAAc,GAAG,CAAC,EAAE;QACpB,MAAMG,WAAW,GAAGb,IAAI,CAACc,KAAK,CAACd,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIS,cAAc,GAAE,CAAC,CAAC,CAAC;QACnE,MAAMK,WAAW,GAAGN,IAAI,CAACE,MAAM,CAACF,IAAI,CAACI,WAAW,CAAC;QACjDnB,YAAY,CAAC,CAACqB,WAAW,CAACC,WAAW,EAAED,WAAW,CAAChB,GAAG,EAAEgB,WAAW,CAACb,GAAG,CAAC,CAAC;MAC7E,CAAC,MAAM;QACHR,YAAY,CAAC,IAAI,CAAC;MACtB;IACJ,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MACdxB,YAAY,CAAC,IAAI,CAAC;MAClB,IAAIwB,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;QAClDjB,OAAO,CAACe,KAAK,CAAC,wHAAwH,CAAC;MAC3I,CAAC,MAAM;QACHf,OAAO,CAACe,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC,CAAC;EACV,CAAC,EAAE,CAACzB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,OAAO,IAAI,CAAC,CAAC;AACjB;AAACD,EAAA,CA3CQD,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA6CtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}